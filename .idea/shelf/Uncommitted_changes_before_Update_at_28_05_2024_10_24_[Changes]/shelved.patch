Index: src/PPCalculator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import com.fasterxml.jackson.databind.ObjectMapper;\r\nimport com.fasterxml.jackson.databind.module.SimpleModule;\r\nimport gen.SQLiteLexer;\r\nimport org.antlr.v4.runtime.CharStream;\r\nimport org.antlr.v4.runtime.CharStreams;\r\nimport org.antlr.v4.runtime.CommonTokenStream;\r\nimport org.antlr.v4.runtime.Token;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.util.HashSet;\r\nimport java.util.Hashtable;\r\nimport java.util.concurrent.atomic.AtomicInteger;\r\nimport java.util.stream.Stream;\r\n\r\n\r\npublic class PPCalculator {\r\n    static AtomicInteger noProcessed = new AtomicInteger(0);\r\n\r\n    public static void calculatePoisonedPairs(HashSet<TokenTypePair> poisonedPairs, Hashtable<Integer, String> tokenInstances, Hashtable<Integer, TokenNeighbours> tokenNeighboursHashtable) throws IOException {\r\n        // Folder path:\r\n\r\n        System.out.println(\"processing generated sql:\");\r\n        String pathName = \"C:\\\\Users\\\\omer_\\\\Desktop\\\\gensamples\\\\positive\\\\SQLite\\\\queries\";\r\n        try (Stream<Path> paths = Files.walk(Paths.get(pathName))) {\r\n            paths.parallel().forEach(p -> processFile(p, tokenInstances, tokenNeighboursHashtable));\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        ObjectMapper mapper = new ObjectMapper();\r\n        SimpleModule module = new SimpleModule();\r\n        module.addSerializer(TokenTypePair.class, new TokenTypePairSerializer());\r\n        mapper.registerModule(module);\r\n\r\n        mapper.writeValue(new File(\"C:\\\\Users\\\\omer_\\\\IdeaProjects\\\\SQLiteRecognizer\\\\precede_and_follow_all_datasets.json\"), tokenNeighboursHashtable);\r\n\r\n\r\n        for (int i : tokenNeighboursHashtable.keySet()) {\r\n            TokenNeighbours neighbours = tokenNeighboursHashtable.get(i);\r\n            if (neighbours != null) {\r\n                for (int j : tokenNeighboursHashtable.keySet()) {\r\n                    if (!(neighbours.follow.contains(j))) {\r\n                        TokenTypePair pair = new TokenTypePair(i, j);\r\n                        poisonedPairs.add(pair);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        mapper.writeValue(new File(\"C:\\\\Users\\\\omer_\\\\IdeaProjects\\\\SQLiteRecognizer\\\\poisoned_pairs.json\"), poisonedPairs);\r\n    }\r\n\r\n    private static void processFile(Path directory, Hashtable<Integer, String> tokenInstances, Hashtable<Integer, TokenNeighbours> tokenNeighboursHashtable) {\r\n        BufferedReader reader = null;\r\n        File program = directory.toFile();\r\n\r\n        if (program.isFile()) {  //walk also goes through dirs...\r\n            try {\r\n                String programPath = program.getAbsolutePath();\r\n                reader = new BufferedReader(new FileReader(programPath));\r\n                CharStream input = CharStreams.fromReader(reader);\r\n                SQLiteLexer lexer = new SQLiteLexer(input);\r\n                CommonTokenStream tokens = new CommonTokenStream(lexer);\r\n                tokens.fill();\r\n                for (int i = 0; i < tokens.size(); i++) { //todo foreachify\r\n                    Token token = tokens.get(i);\r\n                    Token prevToken = i > 0 ? tokens.get(i - 1) : null;\r\n                    Token nextToken = i < tokens.size() - 1 ? tokens.get(i + 1) : null;\r\n\r\n                    int tokenType = token.getType();\r\n\r\n                    if (tokenType != -1) { // not doing -1, EOF is a token but not text that can be injected mid-file...\r\n                        int prevType = prevToken != null ? prevToken.getType() : -2; // -1 reserved for EOF\r\n                        int nextType = nextToken != null ? nextToken.getType() : -2;\r\n\r\n                        TokenNeighbours neighbours = tokenNeighboursHashtable.getOrDefault(tokenType, null);\r\n                        tokenInstances.put(tokenType, token.getText());\r\n\r\n                        if (neighbours == null) neighbours = new TokenNeighbours();\r\n                        if (prevType != -2 && prevType != -1) neighbours.precede.add(prevType);\r\n                        if (nextType != -2 && nextType != -1) neighbours.follow.add(nextType);\r\n                        tokenNeighboursHashtable.put(tokenType, neighbours);\r\n                    }\r\n\r\n                }\r\n                noProcessed.incrementAndGet();\r\n                if (noProcessed.get() % 1000 == 0) {\r\n                    System.out.println(\"Processed \" + noProcessed.get() + \" files.\");\r\n                }\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            } finally {\r\n                if (reader != null) {\r\n                    try {\r\n                        reader.close();\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/PPCalculator.java b/src/PPCalculator.java
--- a/src/PPCalculator.java	(revision 0794d2e81e935e7278a82817d46d606d84ccfcc7)
+++ b/src/PPCalculator.java	(date 1716884645070)
@@ -67,7 +67,7 @@
                 SQLiteLexer lexer = new SQLiteLexer(input);
                 CommonTokenStream tokens = new CommonTokenStream(lexer);
                 tokens.fill();
-                for (int i = 0; i < tokens.size(); i++) { //todo foreachify
+                for (int i = 0; i < tokens.size(); i++) {
                     Token token = tokens.get(i);
                     Token prevToken = i > 0 ? tokens.get(i - 1) : null;
                     Token nextToken = i < tokens.size() - 1 ? tokens.get(i + 1) : null;
Index: grammar/SQLiteParser.g4
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2014 by Bart Kiers\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\r\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\r\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\r\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or\r\n * substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\r\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * Project : sqlite-parser; an ANTLR4 grammar for SQLite https://github.com/bkiers/sqlite-parser\r\n * Developed by:\r\n *     Bart Kiers, bart@big-o.nl\r\n *     Martin Mirchev, marti_2203@abv.bg\r\n *     Mike Lische, mike@lischke-online.de\r\n */\r\n\r\n// $antlr-format alignTrailingComments on, columnLimit 130, minEmptyLines 1, maxEmptyLinesToKeep 1, reflowComments off\r\n// $antlr-format useTab off, allowShortRulesOnASingleLine off, allowShortBlocksOnASingleLine on, alignSemicolons ownLine\r\n\r\nparser grammar SQLiteParser;\r\n\r\noptions {\r\n    tokenVocab = SQLiteLexer;\r\n}\r\n\r\nparse\r\n    : (sql_stmt_list)* EOF\r\n;\r\n\r\nsql_stmt_list\r\n    : SCOL* sql_stmt (SCOL+ sql_stmt)* SCOL*\r\n;\r\n\r\nsql_stmt\r\n    : (EXPLAIN_ (QUERY_ PLAN_)?)? (\r\n        alter_table_stmt\r\n        | analyze_stmt\r\n        | attach_stmt\r\n        | begin_stmt\r\n        | commit_stmt\r\n        | create_index_stmt\r\n        | create_table_stmt\r\n        | create_trigger_stmt\r\n        | create_view_stmt\r\n        | create_virtual_table_stmt\r\n        | delete_stmt\r\n        | delete_stmt_limited\r\n        | detach_stmt\r\n        | drop_stmt\r\n        | insert_stmt\r\n        | pragma_stmt\r\n        | reindex_stmt\r\n        | release_stmt\r\n        | rollback_stmt\r\n        | savepoint_stmt\r\n        | select_stmt\r\n        | update_stmt\r\n        | update_stmt_limited\r\n        | vacuum_stmt\r\n    )\r\n;\r\n\r\nalter_table_stmt\r\n    : ALTER_ TABLE_ (schema_name DOT)? table_name (\r\n        RENAME_ (\r\n            TO_ new_table_name = table_name\r\n            | COLUMN_? old_column_name = column_name TO_ new_column_name = column_name\r\n        )\r\n        | ADD_ COLUMN_? column_def\r\n        | DROP_ COLUMN_? column_name\r\n    )\r\n;\r\n\r\nanalyze_stmt\r\n    : ANALYZE_ (schema_name | (schema_name DOT)? table_or_index_name)?\r\n;\r\n\r\nattach_stmt\r\n    : ATTACH_ DATABASE_? expr AS_ schema_name\r\n;\r\n\r\nbegin_stmt\r\n    : BEGIN_ (DEFERRED_ | IMMEDIATE_ | EXCLUSIVE_)? (TRANSACTION_ transaction_name?)?\r\n;\r\n\r\ncommit_stmt\r\n    : (COMMIT_ | END_) TRANSACTION_?\r\n;\r\n\r\nrollback_stmt\r\n    : ROLLBACK_ TRANSACTION_? (TO_ SAVEPOINT_? savepoint_name)?\r\n;\r\n\r\nsavepoint_stmt\r\n    : SAVEPOINT_ savepoint_name\r\n;\r\n\r\nrelease_stmt\r\n    : RELEASE_ SAVEPOINT_? savepoint_name\r\n;\r\n\r\ncreate_index_stmt\r\n    : CREATE_ UNIQUE_? INDEX_ (IF_ NOT_ EXISTS_)? (schema_name DOT)? index_name ON_ table_name OPEN_PAR indexed_column (\r\n        COMMA indexed_column\r\n    )* CLOSE_PAR (WHERE_ expr)?\r\n;\r\n\r\nindexed_column\r\n    : (column_name | expr) (COLLATE_ collation_name)? asc_desc?\r\n;\r\n\r\ncreate_table_stmt\r\n    : CREATE_ (TEMP_ | TEMPORARY_)? TABLE_ (IF_ NOT_ EXISTS_)? (schema_name DOT)? table_name (\r\n        OPEN_PAR column_def (COMMA column_def)*? (COMMA table_constraint)* CLOSE_PAR (\r\n            WITHOUT_ row_ROW_ID = IDENTIFIER\r\n        )?\r\n        | AS_ select_stmt\r\n    )\r\n;\r\n\r\ncolumn_def\r\n    : column_name type_name? column_constraint*\r\n;\r\n\r\ntype_name\r\n    : name+? (\r\n        OPEN_PAR signed_number CLOSE_PAR\r\n        | OPEN_PAR signed_number COMMA signed_number CLOSE_PAR\r\n    )?\r\n;\r\n\r\ncolumn_constraint\r\n    : (CONSTRAINT_ name)? (\r\n        (PRIMARY_ KEY_ asc_desc? conflict_clause? AUTOINCREMENT_?)\r\n        | (NOT_? NULL_ | UNIQUE_) conflict_clause?\r\n        | CHECK_ OPEN_PAR expr CLOSE_PAR\r\n        | DEFAULT_ (signed_number | literal_value | OPEN_PAR expr CLOSE_PAR)\r\n        | COLLATE_ collation_name\r\n        | foreign_key_clause\r\n        | (GENERATED_ ALWAYS_)? AS_ OPEN_PAR expr CLOSE_PAR (STORED_ | VIRTUAL_)?\r\n    )\r\n;\r\n\r\nsigned_number\r\n    : (PLUS | MINUS)? NUMERIC_LITERAL\r\n;\r\n\r\ntable_constraint\r\n    : (CONSTRAINT_ name)? (\r\n        (PRIMARY_ KEY_ | UNIQUE_) OPEN_PAR indexed_column (COMMA indexed_column)* CLOSE_PAR conflict_clause?\r\n        | CHECK_ OPEN_PAR expr CLOSE_PAR\r\n        | FOREIGN_ KEY_ OPEN_PAR column_name (COMMA column_name)* CLOSE_PAR foreign_key_clause\r\n    )\r\n;\r\n\r\nforeign_key_clause\r\n    : REFERENCES_ foreign_table (OPEN_PAR column_name (COMMA column_name)* CLOSE_PAR)? (\r\n        ON_ (DELETE_ | UPDATE_) (\r\n            SET_ (NULL_ | DEFAULT_)\r\n            | CASCADE_\r\n            | RESTRICT_\r\n            | NO_ ACTION_\r\n        )\r\n        | MATCH_ name\r\n    )* (NOT_? DEFERRABLE_ (INITIALLY_ (DEFERRED_ | IMMEDIATE_))?)?\r\n;\r\n\r\nconflict_clause\r\n    : ON_ CONFLICT_ (ROLLBACK_ | ABORT_ | FAIL_ | IGNORE_ | REPLACE_)\r\n;\r\n\r\ncreate_trigger_stmt\r\n    : CREATE_ (TEMP_ | TEMPORARY_)? TRIGGER_ (IF_ NOT_ EXISTS_)? (schema_name DOT)? trigger_name (\r\n        BEFORE_\r\n        | AFTER_\r\n        | INSTEAD_ OF_\r\n    )? (DELETE_ | INSERT_ | UPDATE_ (OF_ column_name ( COMMA column_name)*)?) ON_ table_name (\r\n        FOR_ EACH_ ROW_\r\n    )? (WHEN_ expr)? BEGIN_ (\r\n        (update_stmt | insert_stmt | delete_stmt | select_stmt) SCOL\r\n    )+ END_\r\n;\r\n\r\ncreate_view_stmt\r\n    : CREATE_ (TEMP_ | TEMPORARY_)? VIEW_ (IF_ NOT_ EXISTS_)? (schema_name DOT)? view_name (\r\n        OPEN_PAR column_name (COMMA column_name)* CLOSE_PAR\r\n    )? AS_ select_stmt\r\n;\r\n\r\ncreate_virtual_table_stmt\r\n    : CREATE_ VIRTUAL_ TABLE_ (IF_ NOT_ EXISTS_)? (schema_name DOT)? table_name USING_ module_name (\r\n        OPEN_PAR module_argument (COMMA module_argument)* CLOSE_PAR\r\n    )?\r\n;\r\n\r\nwith_clause\r\n    : WITH_ RECURSIVE_? cte_table_name AS_ OPEN_PAR select_stmt CLOSE_PAR (\r\n        COMMA cte_table_name AS_ OPEN_PAR select_stmt CLOSE_PAR\r\n    )*\r\n;\r\n\r\ncte_table_name\r\n    : table_name (OPEN_PAR column_name ( COMMA column_name)* CLOSE_PAR)?\r\n;\r\n\r\nrecursive_cte\r\n    : cte_table_name AS_ OPEN_PAR initial_select UNION_ ALL_? recursive_select CLOSE_PAR\r\n;\r\n\r\ncommon_table_expression\r\n    : table_name (OPEN_PAR column_name ( COMMA column_name)* CLOSE_PAR)? AS_ OPEN_PAR select_stmt CLOSE_PAR\r\n;\r\n\r\ndelete_stmt\r\n    : with_clause? DELETE_ FROM_ qualified_table_name (WHERE_ expr)? returning_clause?\r\n;\r\n\r\ndelete_stmt_limited\r\n    : with_clause? DELETE_ FROM_ qualified_table_name (WHERE_ expr)? returning_clause? (\r\n        order_by_stmt? limit_stmt\r\n    )?\r\n;\r\n\r\ndetach_stmt\r\n    : DETACH_ DATABASE_? schema_name\r\n;\r\n\r\ndrop_stmt\r\n    : DROP_ object = (INDEX_ | TABLE_ | TRIGGER_ | VIEW_) (IF_ EXISTS_)? (\r\n        schema_name DOT\r\n    )? any_name\r\n;\r\n\r\n/*\r\n SQLite understands the following binary operators, in order from highest to lowest precedence:\r\n    ||\r\n    * / %\r\n    + -\r\n    << >> & |\r\n    < <= > >=\r\n    = == != <> IS IS NOT IN LIKE GLOB MATCH REGEXP\r\n    AND\r\n    OR\r\n */\r\nexpr\r\n    : literal_value\r\n    | BIND_PARAMETER\r\n    | ((schema_name DOT)? table_name DOT)? column_name\r\n    | unary_operator expr\r\n    | expr PIPE2 expr\r\n    | expr ( STAR | DIV | MOD) expr\r\n    | expr ( PLUS | MINUS) expr\r\n    | expr ( LT2 | GT2 | AMP | PIPE) expr\r\n    | expr ( LT | LT_EQ | GT | GT_EQ) expr\r\n    | expr (\r\n        ASSIGN\r\n        | EQ\r\n        | NOT_EQ1\r\n        | NOT_EQ2\r\n        | IS_\r\n        | IS_ NOT_\r\n        | IN_\r\n        | LIKE_\r\n        | GLOB_\r\n        | MATCH_\r\n        | REGEXP_\r\n    ) expr\r\n    | expr AND_ expr\r\n    | expr OR_ expr\r\n    | function_name OPEN_PAR ((DISTINCT_? expr ( COMMA expr)*) | STAR)? CLOSE_PAR filter_clause? over_clause?\r\n    | OPEN_PAR expr (COMMA expr)* CLOSE_PAR\r\n    | CAST_ OPEN_PAR expr AS_ type_name CLOSE_PAR\r\n    | expr COLLATE_ collation_name\r\n    | expr NOT_? (LIKE_ | GLOB_ | REGEXP_ | MATCH_) expr (ESCAPE_ expr)?\r\n    | expr ( ISNULL_ | NOTNULL_ | NOT_ NULL_)\r\n    | expr IS_ NOT_? expr\r\n    | expr NOT_? BETWEEN_ expr AND_ expr\r\n    | expr NOT_? IN_ (\r\n        OPEN_PAR (select_stmt | expr ( COMMA expr)*)? CLOSE_PAR\r\n        | ( schema_name DOT)? table_name\r\n        | (schema_name DOT)? table_function_name OPEN_PAR (expr (COMMA expr)*)? CLOSE_PAR\r\n    )\r\n    | ((NOT_)? EXISTS_)? OPEN_PAR select_stmt CLOSE_PAR\r\n    | CASE_ expr? (WHEN_ expr THEN_ expr)+ (ELSE_ expr)? END_\r\n    | raise_function\r\n;\r\n\r\nraise_function\r\n    : RAISE_ OPEN_PAR (IGNORE_ | (ROLLBACK_ | ABORT_ | FAIL_) COMMA error_message) CLOSE_PAR\r\n;\r\n\r\nliteral_value\r\n    : NUMERIC_LITERAL\r\n    | STRING_LITERAL\r\n    | BLOB_LITERAL\r\n    | NULL_\r\n    | TRUE_\r\n    | FALSE_\r\n    | CURRENT_TIME_\r\n    | CURRENT_DATE_\r\n    | CURRENT_TIMESTAMP_\r\n;\r\n\r\nvalue_row\r\n    : OPEN_PAR expr (COMMA expr)* CLOSE_PAR\r\n;\r\n\r\nvalues_clause\r\n    : VALUES_ value_row (COMMA value_row)*\r\n;\r\n\r\ninsert_stmt\r\n    : with_clause? (\r\n        INSERT_\r\n        | REPLACE_\r\n        | INSERT_ OR_ ( REPLACE_ | ROLLBACK_ | ABORT_ | FAIL_ | IGNORE_)\r\n    ) INTO_ (schema_name DOT)? table_name (AS_ table_alias)? (\r\n        OPEN_PAR column_name ( COMMA column_name)* CLOSE_PAR\r\n    )? (( ( values_clause | select_stmt) upsert_clause?) | DEFAULT_ VALUES_) returning_clause?\r\n;\r\n\r\nreturning_clause\r\n    : RETURNING_ result_column (COMMA result_column)*\r\n;\r\n\r\nupsert_clause\r\n    : ON_ CONFLICT_ (\r\n        OPEN_PAR indexed_column (COMMA indexed_column)* CLOSE_PAR (WHERE_ expr)?\r\n    )? DO_ (\r\n        NOTHING_\r\n        | UPDATE_ SET_ (\r\n            (column_name | column_name_list) ASSIGN expr (\r\n                COMMA (column_name | column_name_list) ASSIGN expr\r\n            )* (WHERE_ expr)?\r\n        )\r\n    )\r\n;\r\n\r\npragma_stmt\r\n    : PRAGMA_ (schema_name DOT)? pragma_name (\r\n        ASSIGN pragma_value\r\n        | OPEN_PAR pragma_value CLOSE_PAR\r\n    )?\r\n;\r\n\r\npragma_value\r\n    : signed_number\r\n    | name\r\n    | STRING_LITERAL\r\n;\r\n\r\nreindex_stmt\r\n    : REINDEX_ (collation_name | (schema_name DOT)? (table_name | index_name))?\r\n;\r\n\r\nselect_stmt\r\n    : common_table_stmt? select_core (compound_operator select_core)* order_by_stmt? limit_stmt?\r\n;\r\n\r\njoin_clause\r\n    : table_or_subquery (AS_? table_alias)? (join_operator* table_or_subquery join_constraint?)*\r\n;\r\n\r\nselect_core\r\n    : (\r\n        SELECT_ (DISTINCT_ | ALL_)? result_column (COMMA result_column)* (\r\n            FROM_ (table_or_subquery (COMMA table_or_subquery)* | join_clause)\r\n        )? (WHERE_ whereExpr = expr)? (\r\n            GROUP_ BY_ groupByExpr += expr (COMMA groupByExpr += expr)* (\r\n                HAVING_ havingExpr = expr\r\n            )?\r\n        )? (WINDOW_ window_name AS_ window_defn ( COMMA window_name AS_ window_defn)*)?\r\n    )\r\n    | values_clause\r\n;\r\n\r\nfactored_select_stmt\r\n    : select_stmt\r\n;\r\n\r\nsimple_select_stmt\r\n    : common_table_stmt? select_core order_by_stmt? limit_stmt?\r\n;\r\n\r\ncompound_select_stmt\r\n    : common_table_stmt? select_core (\r\n        (UNION_ ALL_? | INTERSECT_ | EXCEPT_) select_core\r\n    )+ order_by_stmt? limit_stmt?\r\n;\r\n\r\ntable_or_subquery\r\n    : (\r\n        (schema_name DOT)? table_name (AS_? table_alias)? (simple_func simple_function_invocation)? (\r\n            INDEXED_ BY_ index_name\r\n            | NOT_ INDEXED_\r\n        )?\r\n    )\r\n    | (schema_name DOT)? table_function_name OPEN_PAR expr (COMMA expr)* CLOSE_PAR (\r\n        AS_? table_alias\r\n    )?\r\n    | OPEN_PAR (table_or_subquery (COMMA table_or_subquery)* | join_clause) CLOSE_PAR\r\n    | OPEN_PAR select_stmt CLOSE_PAR (AS_? table_alias)?\r\n;\r\n\r\nresult_column\r\n    : STAR\r\n    | table_name DOT STAR\r\n    | expr ( AS_? column_alias)?\r\n;\r\n\r\njoin_operator\r\n    : COMMA\r\n    | LATERAL_\r\n    | NATURAL_? (LEFT_ OUTER_? | INNER_ | CROSS_)?  (RIGHT_ OUTER_? | INNER_ | CROSS_)? JOIN_\r\n;\r\n\r\njoin_constraint\r\n    : ON_ expr\r\n    | USING_ OPEN_PAR column_name ( COMMA column_name)* CLOSE_PAR\r\n;\r\n\r\ncompound_operator\r\n    : UNION_ ALL_?\r\n    | INTERSECT_\r\n    | EXCEPT_\r\n;\r\n\r\nupdate_stmt\r\n    : with_clause? UPDATE_ (OR_ (ROLLBACK_ | ABORT_ | REPLACE_ | FAIL_ | IGNORE_))? qualified_table_name SET_ (\r\n        column_name\r\n        | column_name_list\r\n    ) ASSIGN expr (COMMA (column_name | column_name_list) ASSIGN expr)* (\r\n        FROM_ (table_or_subquery (COMMA table_or_subquery)* | join_clause)\r\n    )? (WHERE_ expr)? returning_clause?\r\n;\r\n\r\ncolumn_name_list\r\n    : OPEN_PAR column_name (COMMA column_name)* CLOSE_PAR\r\n;\r\n\r\nupdate_stmt_limited\r\n    : with_clause? UPDATE_ (OR_ (ROLLBACK_ | ABORT_ | REPLACE_ | FAIL_ | IGNORE_))? qualified_table_name SET_ (\r\n        column_name\r\n        | column_name_list\r\n    ) ASSIGN expr (COMMA (column_name | column_name_list) ASSIGN expr)* (WHERE_ expr)? returning_clause? (\r\n        order_by_stmt? limit_stmt\r\n    )?\r\n;\r\n\r\nqualified_table_name\r\n    : (schema_name DOT)? table_name (AS_ alias)? (\r\n        INDEXED_ BY_ index_name\r\n        | NOT_ INDEXED_\r\n    )?\r\n;\r\n\r\nvacuum_stmt\r\n    : VACUUM_ schema_name? (INTO_ filename)?\r\n;\r\n\r\nfilter_clause\r\n    : FILTER_ OPEN_PAR WHERE_ expr CLOSE_PAR\r\n;\r\n\r\nwindow_defn\r\n    : OPEN_PAR base_window_name? (PARTITION_ BY_ expr (COMMA expr)*)? (\r\n        ORDER_ BY_ ordering_term (COMMA ordering_term)*\r\n    ) frame_spec? CLOSE_PAR\r\n;\r\n\r\nover_clause\r\n    : OVER_ (\r\n        window_name\r\n        | OPEN_PAR base_window_name? (PARTITION_ BY_ expr (COMMA expr)*)? (\r\n            ORDER_ BY_ ordering_term (COMMA ordering_term)*\r\n        )? frame_spec? CLOSE_PAR\r\n    )\r\n;\r\n\r\nframe_spec\r\n    : frame_clause (EXCLUDE_ ( NO_ OTHERS_ | CURRENT_ ROW_ | GROUP_ | TIES_))?\r\n;\r\n\r\nframe_clause\r\n    : (RANGE_ | ROWS_ | GROUPS_) (\r\n        frame_single\r\n        | BETWEEN_ frame_left AND_ frame_right\r\n    )\r\n;\r\n\r\nsimple_function_invocation\r\n    : simple_func OPEN_PAR (expr (COMMA expr)* | STAR) CLOSE_PAR\r\n;\r\n\r\naggregate_function_invocation\r\n    : aggregate_func OPEN_PAR (DISTINCT_? expr (COMMA expr)* | STAR)? CLOSE_PAR filter_clause?\r\n;\r\n\r\nwindow_function_invocation\r\n    : window_function OPEN_PAR (expr (COMMA expr)* | STAR)? CLOSE_PAR filter_clause? OVER_ (\r\n        window_defn\r\n        | window_name\r\n    )\r\n;\r\n\r\ncommon_table_stmt\r\n    : //additional structures\r\n    WITH_ RECURSIVE_? common_table_expression (COMMA common_table_expression)*\r\n;\r\n\r\norder_by_stmt\r\n    : ORDER_ BY_ ordering_term (COMMA ordering_term)*\r\n;\r\n\r\nlimit_stmt\r\n    : LIMIT_ expr ((OFFSET_ | COMMA) expr)?\r\n;\r\n\r\nordering_term\r\n    : expr (COLLATE_ collation_name)? asc_desc? (NULLS_ (FIRST_ | LAST_))?\r\n;\r\n\r\nasc_desc\r\n    : ASC_\r\n    | DESC_\r\n;\r\n\r\nframe_left\r\n    : expr PRECEDING_\r\n    | expr FOLLOWING_\r\n    | CURRENT_ ROW_\r\n    | UNBOUNDED_ PRECEDING_\r\n;\r\n\r\nframe_right\r\n    : expr PRECEDING_\r\n    | expr FOLLOWING_\r\n    | CURRENT_ ROW_\r\n    | UNBOUNDED_ FOLLOWING_\r\n;\r\n\r\nframe_single\r\n    : expr PRECEDING_\r\n    | UNBOUNDED_ PRECEDING_\r\n    | CURRENT_ ROW_\r\n;\r\n\r\n// unknown\r\n\r\nwindow_function\r\n    : (FIRST_VALUE_ | LAST_VALUE_) OPEN_PAR expr CLOSE_PAR OVER_ OPEN_PAR partition_by? order_by_expr_asc_desc frame_clause?\r\n        CLOSE_PAR\r\n    | (CUME_DIST_ | PERCENT_RANK_) OPEN_PAR CLOSE_PAR OVER_ OPEN_PAR partition_by? order_by_expr? CLOSE_PAR\r\n    | (DENSE_RANK_ | RANK_ | ROW_NUMBER_) OPEN_PAR CLOSE_PAR OVER_ OPEN_PAR partition_by? order_by_expr_asc_desc CLOSE_PAR\r\n    | (LAG_ | LEAD_) OPEN_PAR expr offset? default_value? CLOSE_PAR OVER_ OPEN_PAR partition_by? order_by_expr_asc_desc CLOSE_PAR\r\n    | NTH_VALUE_ OPEN_PAR expr COMMA signed_number CLOSE_PAR OVER_ OPEN_PAR partition_by? order_by_expr_asc_desc frame_clause?\r\n        CLOSE_PAR\r\n    | NTILE_ OPEN_PAR expr CLOSE_PAR OVER_ OPEN_PAR partition_by? order_by_expr_asc_desc CLOSE_PAR\r\n;\r\n\r\noffset\r\n    : COMMA signed_number\r\n;\r\n\r\ndefault_value\r\n    : COMMA signed_number\r\n;\r\n\r\npartition_by\r\n    : PARTITION_ BY_ expr+\r\n;\r\n\r\norder_by_expr\r\n    : ORDER_ BY_ expr+\r\n;\r\n\r\norder_by_expr_asc_desc\r\n    : ORDER_ BY_ expr_asc_desc\r\n;\r\n\r\nexpr_asc_desc\r\n    : expr asc_desc? (COMMA expr asc_desc?)*\r\n;\r\n\r\n//TODO BOTH OF THESE HAVE TO BE REWORKED TO FOLLOW THE SPEC\r\ninitial_select\r\n    : select_stmt\r\n;\r\n\r\nrecursive_select\r\n    : select_stmt\r\n;\r\n\r\nunary_operator\r\n    : MINUS\r\n    | PLUS\r\n    | TILDE\r\n    | NOT_\r\n;\r\n\r\nerror_message\r\n    : STRING_LITERAL\r\n;\r\n\r\nmodule_argument\r\n    : // TODO check what exactly is permitted here\r\n    expr\r\n    | column_def\r\n;\r\n\r\ncolumn_alias\r\n    : IDENTIFIER\r\n    | STRING_LITERAL\r\n;\r\n\r\nkeyword\r\n    : ABORT_\r\n    | ACTION_\r\n    | ADD_\r\n    | AFTER_\r\n    | ALL_\r\n    | ALTER_\r\n    | ANALYZE_\r\n    | AND_\r\n    | AS_\r\n    | ASC_\r\n    | ATTACH_\r\n    | AUTOINCREMENT_\r\n    | BEFORE_\r\n    | BEGIN_\r\n    | BETWEEN_\r\n    | BY_\r\n    | CASCADE_\r\n    | CASE_\r\n    | CAST_\r\n    | CHECK_\r\n    | COLLATE_\r\n    | COLUMN_\r\n    | COMMIT_\r\n    | CONFLICT_\r\n    | CONSTRAINT_\r\n    | CREATE_\r\n    | CROSS_\r\n    | CURRENT_DATE_\r\n    | CURRENT_TIME_\r\n    | CURRENT_TIMESTAMP_\r\n    | DATABASE_\r\n    | DEFAULT_\r\n    | DEFERRABLE_\r\n    | DEFERRED_\r\n    | DELETE_\r\n    | DESC_\r\n    | DETACH_\r\n    | DISTINCT_\r\n    | DROP_\r\n    | EACH_\r\n    | ELSE_\r\n    | END_\r\n    | ESCAPE_\r\n    | EXCEPT_\r\n    | EXCLUSIVE_\r\n    | EXISTS_\r\n    | EXPLAIN_\r\n    | FAIL_\r\n    | FOR_\r\n    | FOREIGN_\r\n    | FROM_\r\n    | FULL_\r\n    | GLOB_\r\n    | GROUP_\r\n    | HAVING_\r\n    | IF_\r\n    | IGNORE_\r\n    | IMMEDIATE_\r\n    | IN_\r\n    | INDEX_\r\n    | INDEXED_\r\n    | INITIALLY_\r\n    | INNER_\r\n    | INSERT_\r\n    | INSTEAD_\r\n    | INTERSECT_\r\n    | INTO_\r\n    | IS_\r\n    | ISNULL_\r\n    | JOIN_\r\n    | KEY_\r\n    | LEFT_\r\n    | LIKE_\r\n    | LIMIT_\r\n    | MATCH_\r\n    | NATURAL_\r\n    | NO_\r\n    | NOT_\r\n    | NOTNULL_\r\n    | NULL_\r\n    | OF_\r\n    | OFFSET_\r\n    | ON_\r\n    | OR_\r\n    | ORDER_\r\n    | OUTER_\r\n    | PLAN_\r\n    | PRAGMA_\r\n    | PRIMARY_\r\n    | QUERY_\r\n    | RAISE_\r\n    | RECURSIVE_\r\n    | REFERENCES_\r\n    | REGEXP_\r\n    | REINDEX_\r\n    | RELEASE_\r\n    | RENAME_\r\n    | REPLACE_\r\n    | RESTRICT_\r\n    | RIGHT_\r\n    | ROLLBACK_\r\n    | ROW_\r\n    | ROWS_\r\n    | SAVEPOINT_\r\n    | SELECT_\r\n    | SET_\r\n    | TABLE_\r\n    | TEMP_\r\n    | TEMPORARY_\r\n    | THEN_\r\n    | TO_\r\n    | TRANSACTION_\r\n    | TRIGGER_\r\n    | UNION_\r\n    | UNIQUE_\r\n    | UPDATE_\r\n    | USING_\r\n    | VACUUM_\r\n    | VALUES_\r\n    | VIEW_\r\n    | VIRTUAL_\r\n    | WHEN_\r\n    | WHERE_\r\n    | WITH_\r\n    | WITHOUT_\r\n    | FIRST_VALUE_\r\n    | OVER_\r\n    | PARTITION_\r\n    | RANGE_\r\n    | PRECEDING_\r\n    | UNBOUNDED_\r\n    | CURRENT_\r\n    | FOLLOWING_\r\n    | CUME_DIST_\r\n    | DENSE_RANK_\r\n    | LAG_\r\n    | LAST_VALUE_\r\n    | LEAD_\r\n    | NTH_VALUE_\r\n    | NTILE_\r\n    | PERCENT_RANK_\r\n    | RANK_\r\n    | ROW_NUMBER_\r\n    | GENERATED_\r\n    | ALWAYS_\r\n    | STORED_\r\n    | TRUE_\r\n    | FALSE_\r\n    | WINDOW_\r\n    | NULLS_\r\n    | FIRST_\r\n    | LAST_\r\n    | FILTER_\r\n    | GROUPS_\r\n    | EXCLUDE_\r\n;\r\n\r\n// TODO: check all names below\r\n\r\nname\r\n    : any_name\r\n;\r\n\r\nfunction_name\r\n    : any_name\r\n;\r\n\r\nschema_name\r\n    : any_name\r\n;\r\n\r\ntable_name\r\n    : any_name\r\n;\r\n\r\ntable_or_index_name\r\n    : any_name\r\n;\r\n\r\ncolumn_name\r\n    : any_name\r\n;\r\n\r\ncollation_name\r\n    : any_name\r\n;\r\n\r\nforeign_table\r\n    : any_name\r\n;\r\n\r\nindex_name\r\n    : any_name\r\n;\r\n\r\ntrigger_name\r\n    : any_name\r\n;\r\n\r\nview_name\r\n    : any_name\r\n;\r\n\r\nmodule_name\r\n    : any_name\r\n;\r\n\r\npragma_name\r\n    : any_name\r\n;\r\n\r\nsavepoint_name\r\n    : any_name\r\n;\r\n\r\ntable_alias\r\n    : any_name\r\n;\r\n\r\ntransaction_name\r\n    : any_name\r\n;\r\n\r\nwindow_name\r\n    : any_name\r\n;\r\n\r\nalias\r\n    : any_name\r\n;\r\n\r\nfilename\r\n    : any_name\r\n;\r\n\r\nbase_window_name\r\n    : any_name\r\n;\r\n\r\nsimple_func\r\n    : any_name\r\n;\r\n\r\naggregate_func\r\n    : any_name\r\n;\r\n\r\ntable_function_name\r\n    : any_name\r\n;\r\n\r\nany_name\r\n    : IDENTIFIER\r\n    | keyword\r\n    | STRING_LITERAL\r\n    | OPEN_PAR any_name CLOSE_PAR\r\n;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/grammar/SQLiteParser.g4 b/grammar/SQLiteParser.g4
--- a/grammar/SQLiteParser.g4	(revision 0794d2e81e935e7278a82817d46d606d84ccfcc7)
+++ b/grammar/SQLiteParser.g4	(date 1716884611746)
@@ -593,7 +593,7 @@
     : expr asc_desc? (COMMA expr asc_desc?)*
 ;
 
-//TODO BOTH OF THESE HAVE TO BE REWORKED TO FOLLOW THE SPEC
+
 initial_select
     : select_stmt
 ;
@@ -614,7 +614,7 @@
 ;
 
 module_argument
-    : // TODO check what exactly is permitted here
+    :
     expr
     | column_def
 ;
@@ -782,7 +782,7 @@
     | EXCLUDE_
 ;
 
-// TODO: check all names below
+
 
 name
     : any_name
Index: src/Recognizer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import gen.SQLiteLexer;\r\nimport gen.SQLiteParser;\r\nimport org.antlr.v4.runtime.CharStream;\r\nimport org.antlr.v4.runtime.CharStreams;\r\nimport org.antlr.v4.runtime.CommonTokenStream;\r\nimport org.antlr.v4.runtime.atn.LexerATNSimulator;\r\nimport org.antlr.v4.runtime.atn.ParserATNSimulator;\r\nimport org.antlr.v4.runtime.atn.PredictionContextCache;\r\nimport org.antlr.v4.runtime.tree.ParseTree;\r\n\r\nimport java.io.*;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.util.Comparator;\r\nimport java.util.concurrent.atomic.AtomicInteger;\r\nimport java.util.stream.Stream;\r\n\r\n\r\npublic class Recognizer {\r\n    static AtomicInteger noPassed = new AtomicInteger(0);\r\n    static AtomicInteger noFailed = new AtomicInteger(0);\r\n    static AtomicInteger noProcessed = new AtomicInteger(0);\r\n    static FileWriter log;\r\n\r\n    public static void main(String[] args) throws IOException {\r\n        // Folder path:\r\n//        String pathName = \"C:\\\\Users\\\\omer_\\\\Desktop\\\\gensamples\\\\negative\\\\SQLite\\\\wordmutation\\\\output\";\r\n        String pathName = \"C:\\\\Users\\\\omer_\\\\Desktop\\\\gensamples\\\\positive\\\\SQLite\\\\queries\";\r\n        log = new FileWriter(\"log.txt\");\r\n\r\n        try (Stream<Path> paths = Files.walk(Paths.get(pathName))) {\r\n            paths\r\n                    .sorted(Comparator.comparing((Path p) -> p.toFile().length()).thenComparing(Path::toString))\r\n                    .parallel()\r\n                    .forEachOrdered(Recognizer::parseFile);\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        System.out.println(\"Number passed: \" + noPassed.get());\r\n        System.out.println(\"Number failed: \" + noFailed.get());\r\n        log.close();\r\n    }\r\n\r\n    private static void parseFile(Path directory) {\r\n        BufferedReader reader = null;\r\n        File program = directory.toFile();\r\n\r\n        if (program.isFile()) {  //walk also goes through dirs...\r\n            SQLiteLexer lexer;\r\n            SQLiteParser parser;\r\n            try {\r\n                String programPath = program.getAbsolutePath();\r\n                reader = new BufferedReader(new FileReader(programPath));\r\n                CharStream input = CharStreams.fromReader(reader);\r\n                lexer = new SQLiteLexer(input);\r\n                CommonTokenStream tokens = new CommonTokenStream(lexer);\r\n                parser = new SQLiteParser(tokens);\r\n                //doing this helps the GC clear the cache\r\n                lexer.setInterpreter(new LexerATNSimulator(lexer, lexer.getATN(), lexer.getInterpreter().decisionToDFA, new PredictionContextCache()));\r\n                parser.setInterpreter(new ParserATNSimulator(parser, parser.getATN(), parser.getInterpreter().decisionToDFA, new PredictionContextCache()));\r\n                // prevent large error logs\r\n                parser.removeErrorListeners();\r\n                CustomErrorListener listener = new CustomErrorListener();\r\n                parser.addErrorListener(listener);\r\n                ParseTree tree = parser.parse();\r\n                //todo check if neccesary\r\n                parser.getInterpreter().clearDFA();\r\n                lexer.getInterpreter().clearDFA();\r\n//                if (parser.getNumberOfSyntaxErrors() == 0) {\r\n                if (listener.getSyntaxErrors() == 0) {\r\n//                    System.out.println(program.getName() + \" PASS\");\r\n//                    log.write(program.getPath() + \"\\n\");\r\n                    noPassed.incrementAndGet();\r\n                } else {\r\n                    System.out.println(program.getPath() + \" FAIL\");\r\n                    log.write(program.getPath() + \" FAIL\\n\");\r\n                    noFailed.incrementAndGet();\r\n                }\r\n                noProcessed.incrementAndGet();\r\n                if (noProcessed.get() % 1000 == 0) {\r\n                    System.out.println(\"Processed \" + noProcessed.get() + \" files.\");\r\n                }\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            } finally {\r\n                if (reader != null) {\r\n                    try {\r\n                        reader.close();\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Recognizer.java b/src/Recognizer.java
--- a/src/Recognizer.java	(revision 0794d2e81e935e7278a82817d46d606d84ccfcc7)
+++ b/src/Recognizer.java	(date 1716884564303)
@@ -65,13 +65,11 @@
                 CustomErrorListener listener = new CustomErrorListener();
                 parser.addErrorListener(listener);
                 ParseTree tree = parser.parse();
-                //todo check if neccesary
                 parser.getInterpreter().clearDFA();
                 lexer.getInterpreter().clearDFA();
-//                if (parser.getNumberOfSyntaxErrors() == 0) {
                 if (listener.getSyntaxErrors() == 0) {
-//                    System.out.println(program.getName() + " PASS");
-//                    log.write(program.getPath() + "\n");
+                    System.out.println(program.getName() + " PASS");
+                    log.write(program.getPath() + "\n");
                     noPassed.incrementAndGet();
                 } else {
                     System.out.println(program.getPath() + " FAIL");
Index: grammar/SQLiteLexer.g4
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2020 by Martin Mirchev\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\r\n * associated documentation files (the \"Software\"), to deal in the Software without restriction,\r\n * including without limitation the rights to use, copy, modify, merge, publish, distribute,\r\n * sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all copies or\r\n * substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\r\n * NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n *\r\n * Project : sqlite-parser; an ANTLR4 grammar for SQLite https://github.com/bkiers/sqlite-parser\r\n * Developed by : Bart Kiers, bart@big-o.nl\r\n */\r\n\r\n// $antlr-format alignTrailingComments on, columnLimit 150, maxEmptyLinesToKeep 1, reflowComments off, useTab off\r\n// $antlr-format allowShortRulesOnASingleLine on, alignSemicolons ownLine\r\n\r\nlexer grammar SQLiteLexer;\r\n\r\noptions {\r\n    caseInsensitive = true;\r\n}\r\n\r\nSCOL      : ';';\r\nDOT       : '.';\r\nOPEN_PAR  : '(';\r\nCLOSE_PAR : ')';\r\nCOMMA     : ',';\r\nASSIGN    : '=';\r\nSTAR      : '*';\r\nPLUS      : '+';\r\nMINUS     : '-';\r\nTILDE     : '~';\r\nPIPE2     : '||';\r\nDIV       : '/';\r\nMOD       : '%';\r\nLT2       : '<<';\r\nGT2       : '>>';\r\nAMP       : '&';\r\nPIPE      : '|';\r\nLT        : '<';\r\nLT_EQ     : '<=';\r\nGT        : '>';\r\nGT_EQ     : '>=';\r\nEQ        : '==';\r\nNOT_EQ1   : '!=';\r\nNOT_EQ2   : '<>';\r\n\r\n// http://www.sqlite.org/lang_keywords.html\r\nABORT_             : 'ABORT';\r\nACTION_            : 'ACTION';\r\nADD_               : 'ADD';\r\nAFTER_             : 'AFTER';\r\nALL_               : 'ALL';\r\nALTER_             : 'ALTER';\r\nANALYZE_           : 'ANALYZE';\r\nAND_               : 'AND';\r\nAS_                : 'AS';\r\nASC_               : 'ASC';\r\nATTACH_            : 'ATTACH';\r\nAUTOINCREMENT_     : 'AUTOINCREMENT';\r\nBEFORE_            : 'BEFORE';\r\nBEGIN_             : 'BEGIN';\r\nBETWEEN_           : 'BETWEEN';\r\nBY_                : 'BY';\r\nCASCADE_           : 'CASCADE';\r\nCASE_              : 'CASE';\r\nCAST_              : 'CAST';\r\nCHECK_             : 'CHECK';\r\nCOLLATE_           : 'COLLATE';\r\nCOLUMN_            : 'COLUMN';\r\nCOMMIT_            : 'COMMIT';\r\nCONFLICT_          : 'CONFLICT';\r\nCONSTRAINT_        : 'CONSTRAINT';\r\nCREATE_            : 'CREATE';\r\nCROSS_             : 'CROSS';\r\nCURRENT_DATE_      : 'CURRENT_DATE';\r\nCURRENT_TIME_      : 'CURRENT_TIME';\r\nCURRENT_TIMESTAMP_ : 'CURRENT_TIMESTAMP';\r\nDATABASE_          : 'DATABASE';\r\nDEFAULT_           : 'DEFAULT';\r\nDEFERRABLE_        : 'DEFERRABLE';\r\nDEFERRED_          : 'DEFERRED';\r\nDELETE_            : 'DELETE';\r\nDESC_              : 'DESC';\r\nDETACH_            : 'DETACH';\r\nDISTINCT_          : 'DISTINCT';\r\nDROP_              : 'DROP';\r\nEACH_              : 'EACH';\r\nELSE_              : 'ELSE';\r\nEND_               : 'END';\r\nESCAPE_            : 'ESCAPE';\r\nEXCEPT_            : 'EXCEPT';\r\nEXCLUSIVE_         : 'EXCLUSIVE';\r\nEXISTS_            : 'EXISTS';\r\nEXPLAIN_           : 'EXPLAIN';\r\nFAIL_              : 'FAIL';\r\nFOR_               : 'FOR';\r\nFOREIGN_           : 'FOREIGN';\r\nFROM_              : 'FROM';\r\nFULL_              : 'FULL';\r\nGLOB_              : 'GLOB';\r\nGROUP_             : 'GROUP';\r\nHAVING_            : 'HAVING';\r\nIF_                : 'IF';\r\nIGNORE_            : 'IGNORE';\r\nIMMEDIATE_         : 'IMMEDIATE';\r\nIN_                : 'IN';\r\nINDEX_             : 'INDEX';\r\nINDEXED_           : 'INDEXED';\r\nINITIALLY_         : 'INITIALLY';\r\nINNER_             : 'INNER';\r\nINSERT_            : 'INSERT';\r\nINSTEAD_           : 'INSTEAD';\r\nINTERSECT_         : 'INTERSECT';\r\nINTO_              : 'INTO';\r\nIS_                : 'IS';\r\nISNULL_            : 'ISNULL';\r\nJOIN_              : 'JOIN';\r\nKEY_               : 'KEY';\r\nLATERAL_           : 'LATERAL';\r\nLEFT_              : 'LEFT';\r\nLIKE_              : 'LIKE';\r\nLIMIT_             : 'LIMIT';\r\nMATCH_             : 'MATCH';\r\nNATURAL_           : 'NATURAL';\r\nNO_                : 'NO';\r\nNOT_               : 'NOT';\r\nNOTNULL_           : 'NOTNULL';\r\nNULL_              : 'NULL';\r\nOF_                : 'OF';\r\nOFFSET_            : 'OFFSET';\r\nON_                : 'ON';\r\nOR_                : 'OR';\r\nORDER_             : 'ORDER';\r\nOUTER_             : 'OUTER';\r\nPLAN_              : 'PLAN';\r\nPRAGMA_            : 'PRAGMA';\r\nPRIMARY_           : 'PRIMARY';\r\nQUERY_             : 'QUERY';\r\nRAISE_             : 'RAISE';\r\nRECURSIVE_         : 'RECURSIVE';\r\nREFERENCES_        : 'REFERENCES';\r\nREGEXP_            : 'REGEXP';\r\nREINDEX_           : 'REINDEX';\r\nRELEASE_           : 'RELEASE';\r\nRENAME_            : 'RENAME';\r\nREPLACE_           : 'REPLACE';\r\nRESTRICT_          : 'RESTRICT';\r\nRETURNING_         : 'RETURNING';\r\nRIGHT_             : 'RIGHT';\r\nROLLBACK_          : 'ROLLBACK';\r\nROW_               : 'ROW';\r\nROWS_              : 'ROWS';\r\nSAVEPOINT_         : 'SAVEPOINT';\r\nSELECT_            : 'SELECT';\r\nSET_               : 'SET';\r\nTABLE_             : 'TABLE';\r\nTEMP_              : 'TEMP';\r\nTEMPORARY_         : 'TEMPORARY';\r\nTHEN_              : 'THEN';\r\nTO_                : 'TO';\r\nTRANSACTION_       : 'TRANSACTION';\r\nTRIGGER_           : 'TRIGGER';\r\nUNION_             : 'UNION';\r\nUNIQUE_            : 'UNIQUE';\r\nUPDATE_            : 'UPDATE';\r\nUSING_             : 'USING';\r\nVACUUM_            : 'VACUUM';\r\nVALUES_            : 'VALUES';\r\nVIEW_              : 'VIEW';\r\nVIRTUAL_           : 'VIRTUAL';\r\nWHEN_              : 'WHEN';\r\nWHERE_             : 'WHERE';\r\nWITH_              : 'WITH';\r\nWITHOUT_           : 'WITHOUT';\r\nFIRST_VALUE_       : 'FIRST_VALUE';\r\nOVER_              : 'OVER';\r\nPARTITION_         : 'PARTITION';\r\nRANGE_             : 'RANGE';\r\nPRECEDING_         : 'PRECEDING';\r\nUNBOUNDED_         : 'UNBOUNDED';\r\nCURRENT_           : 'CURRENT';\r\nFOLLOWING_         : 'FOLLOWING';\r\nCUME_DIST_         : 'CUME_DIST';\r\nDENSE_RANK_        : 'DENSE_RANK';\r\nLAG_               : 'LAG';\r\nLAST_VALUE_        : 'LAST_VALUE';\r\nLEAD_              : 'LEAD';\r\nNTH_VALUE_         : 'NTH_VALUE';\r\nNTILE_             : 'NTILE';\r\nPERCENT_RANK_      : 'PERCENT_RANK';\r\nRANK_              : 'RANK';\r\nROW_NUMBER_        : 'ROW_NUMBER';\r\nGENERATED_         : 'GENERATED';\r\nALWAYS_            : 'ALWAYS';\r\nSTORED_            : 'STORED';\r\nTRUE_              : 'TRUE';\r\nFALSE_             : 'FALSE';\r\nWINDOW_            : 'WINDOW';\r\nNULLS_             : 'NULLS';\r\nFIRST_             : 'FIRST';\r\nLAST_              : 'LAST';\r\nFILTER_            : 'FILTER';\r\nGROUPS_            : 'GROUPS';\r\nEXCLUDE_           : 'EXCLUDE';\r\nTIES_              : 'TIES';\r\nOTHERS_            : 'OTHERS';\r\nDO_                : 'DO';\r\nNOTHING_           : 'NOTHING';\r\n\r\nIDENTIFIER:\r\n    '\"' (~'\"' | '\"\"')* '\"'\r\n    | '`' (~'`' | '``')* '`'\r\n    | '[' ~']'* ']'\r\n    | [A-Z_] [A-Z_0-9]*\r\n; // TODO check: needs more chars in set\r\n\r\nNUMERIC_LITERAL: ((DIGIT+ ('.' DIGIT*)?) | ('.' DIGIT+)) ('E' [-+]? DIGIT+)? | '0x' HEX_DIGIT+;\r\n\r\nBIND_PARAMETER: '?' DIGIT* | [:@$] IDENTIFIER;\r\n\r\nSTRING_LITERAL: '\\'' ( ~'\\'' | '\\'\\'')* '\\'';\r\n\r\nBLOB_LITERAL: 'X' STRING_LITERAL;\r\n\r\n//todo this prob won't work for word mutation just ingoring would be better...\r\n\r\nSINGLE_LINE_COMMENT: '--' ~[\\r\\n]* (('\\r'? '\\n') | EOF) -> skip;\r\n\r\nMULTILINE_COMMENT: '/*' .*? '*/' -> skip;\r\n\r\nSPACES: [ \\u000B\\t\\r\\n] -> skip;\r\n\r\nUNEXPECTED_CHAR: .;\r\n\r\nfragment HEX_DIGIT : [0-9A-F];\r\nfragment DIGIT     : [0-9];
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/grammar/SQLiteLexer.g4 b/grammar/SQLiteLexer.g4
--- a/grammar/SQLiteLexer.g4	(revision 0794d2e81e935e7278a82817d46d606d84ccfcc7)
+++ b/grammar/SQLiteLexer.g4	(date 1716884578818)
@@ -224,7 +224,7 @@
     | '`' (~'`' | '``')* '`'
     | '[' ~']'* ']'
     | [A-Z_] [A-Z_0-9]*
-; // TODO check: needs more chars in set
+;
 
 NUMERIC_LITERAL: ((DIGIT+ ('.' DIGIT*)?) | ('.' DIGIT+)) ('E' [-+]? DIGIT+)? | '0x' HEX_DIGIT+;
 
@@ -234,7 +234,6 @@
 
 BLOB_LITERAL: 'X' STRING_LITERAL;
 
-//todo this prob won't work for word mutation just ingoring would be better...
 
 SINGLE_LINE_COMMENT: '--' ~[\r\n]* (('\r'? '\n') | EOF) -> skip;
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"983bca77-ff2a-44b9-a383-3db8629e48a3\" name=\"Changes\" comment=\"update samplefinder with correct path\">\r\n      <change afterPath=\"$PROJECT_DIR$/testing/test.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/grammar/SQLiteLexer.g4\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/grammar/SQLiteLexer.g4\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Recognizer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Recognizer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/WordMutator.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/WordMutator.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/gen/SQLiteLexer.interp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/gen/SQLiteLexer.interp\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/gen/SQLiteLexer.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/gen/SQLiteLexer.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/gen/SQLiteParser.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/gen/SQLiteParser.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;omersayilir75&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/omersayilir75/SQLiteRecognizer.git&quot;,\r\n    &quot;accountId&quot;: &quot;3598222f-fa02-489e-b320-dfe85ad0a319&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2da1kMOsRF43xA5ufJGjaCZcBml\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Recognizer.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.SampleFinder.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.WordMutator.executor&quot;: &quot;Run&quot;,\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/omer_/IdeaProjects/SQLiteRecognizer/src&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;project.propCompiler&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\omer_\\IdeaProjects\\SQLiteRecognizer\\src\" />\r\n      <recent name=\"C:\\Users\\omer_\\IdeaProjects\\SQLiteRecognizer\\gen\" />\r\n      <recent name=\"C:\\Users\\omer_\\IdeaProjects\\SQLiteRecognizer\\grammar\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\omer_\\IdeaProjects\\SQLiteRecognizer\\grammar\" />\r\n      <recent name=\"C:\\Users\\omer_\\IdeaProjects\\SQLiteRecognizer\\src\" />\r\n      <recent name=\"C:\\Users\\omer_\\IdeaProjects\\SQLiteRecognizer\\src\\gen\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.SampleFinder\">\r\n    <configuration name=\"Recognizer\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Recognizer\" />\r\n      <module name=\"SQLiteRecognizer\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"SampleFinder\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"SampleFinder\" />\r\n      <module name=\"SQLiteRecognizer\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"WordMutator\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"WordMutator\" />\r\n      <module name=\"SQLiteRecognizer\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.SampleFinder\" />\r\n        <item itemvalue=\"Application.Recognizer\" />\r\n        <item itemvalue=\"Application.WordMutator\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9f38398b9061-18abd8497189-intellij.indexing.shared.core-IU-241.14494.240\" />\r\n        <option value=\"bundled-js-predefined-1d06a55b98c1-74d2a5396914-JavaScript-IU-241.14494.240\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"983bca77-ff2a-44b9-a383-3db8629e48a3\" name=\"Changes\" comment=\"\" />\r\n      <created>1710231520111</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1710231520111</updated>\r\n      <workItem from=\"1710231521175\" duration=\"7744000\" />\r\n      <workItem from=\"1710239315571\" duration=\"2567000\" />\r\n      <workItem from=\"1710241907321\" duration=\"1199000\" />\r\n      <workItem from=\"1710243119112\" duration=\"1351000\" />\r\n      <workItem from=\"1710244494814\" duration=\"8142000\" />\r\n      <workItem from=\"1710257283717\" duration=\"47000\" />\r\n      <workItem from=\"1710257422216\" duration=\"5718000\" />\r\n      <workItem from=\"1710418522817\" duration=\"71000\" />\r\n      <workItem from=\"1710418644696\" duration=\"2364000\" />\r\n      <workItem from=\"1710421038127\" duration=\"48057000\" />\r\n      <workItem from=\"1710933618744\" duration=\"289000\" />\r\n      <workItem from=\"1710934233854\" duration=\"10304000\" />\r\n      <workItem from=\"1710950650727\" duration=\"11106000\" />\r\n      <workItem from=\"1711025785368\" duration=\"7524000\" />\r\n      <workItem from=\"1711094442744\" duration=\"271000\" />\r\n      <workItem from=\"1711099884828\" duration=\"5510000\" />\r\n      <workItem from=\"1711108452340\" duration=\"1321000\" />\r\n      <workItem from=\"1711355086108\" duration=\"2421000\" />\r\n      <workItem from=\"1711443977566\" duration=\"2283000\" />\r\n      <workItem from=\"1711549320164\" duration=\"3120000\" />\r\n      <workItem from=\"1711647666733\" duration=\"623000\" />\r\n      <workItem from=\"1711653066255\" duration=\"71000\" />\r\n      <workItem from=\"1711705536599\" duration=\"19000\" />\r\n      <workItem from=\"1711719288266\" duration=\"996000\" />\r\n      <workItem from=\"1712067017590\" duration=\"142000\" />\r\n      <workItem from=\"1712067753134\" duration=\"2588000\" />\r\n      <workItem from=\"1712149554703\" duration=\"832000\" />\r\n      <workItem from=\"1712304194293\" duration=\"11000\" />\r\n      <workItem from=\"1712308835000\" duration=\"599000\" />\r\n      <workItem from=\"1712319748107\" duration=\"158000\" />\r\n      <workItem from=\"1712838509778\" duration=\"2503000\" />\r\n      <workItem from=\"1713345805475\" duration=\"5329000\" />\r\n      <workItem from=\"1713434939754\" duration=\"2071000\" />\r\n      <workItem from=\"1713513569041\" duration=\"3054000\" />\r\n      <workItem from=\"1713519180487\" duration=\"560000\" />\r\n      <workItem from=\"1713519931873\" duration=\"626000\" />\r\n      <workItem from=\"1713699810971\" duration=\"489000\" />\r\n      <workItem from=\"1713700326282\" duration=\"12024000\" />\r\n      <workItem from=\"1713873559243\" duration=\"9411000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"added grammar files\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710231717200</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710231717200</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"added dependencies, generated parser\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710232735039</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710232735039</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"went through the generated pos samples, 907237/999999 samples passed.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710748445741</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710748445741</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"update samplefinder with correct path\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710933881379</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710933881379</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"added grammar files\" />\r\n    <MESSAGE value=\"added dependencies, generated parser\" />\r\n    <MESSAGE value=\"went through the generated pos samples, 907237/999999 samples passed.\" />\r\n    <MESSAGE value=\"update samplefinder with correct path\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"update samplefinder with correct path\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/Recognizer.java</url>\r\n          <line>71</line>\r\n          <option name=\"timeStamp\" value=\"3\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/CustomErrorListener.java</url>\r\n          <line>9</line>\r\n          <option name=\"timeStamp\" value=\"4\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0794d2e81e935e7278a82817d46d606d84ccfcc7)
+++ b/.idea/workspace.xml	(date 1716884616495)
@@ -4,15 +4,14 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="983bca77-ff2a-44b9-a383-3db8629e48a3" name="Changes" comment="update samplefinder with correct path">
-      <change afterPath="$PROJECT_DIR$/testing/test.txt" afterDir="false" />
+    <list default="true" id="983bca77-ff2a-44b9-a383-3db8629e48a3" name="Changes" comment="moving over to desktop">
+      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/grammar/SQLiteLexer.g4" beforeDir="false" afterPath="$PROJECT_DIR$/grammar/SQLiteLexer.g4" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/grammar/SQLiteParser.g4" beforeDir="false" afterPath="$PROJECT_DIR$/grammar/SQLiteParser.g4" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/PPCalculator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/PPCalculator.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Recognizer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Recognizer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/WordMutator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/WordMutator.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/gen/SQLiteLexer.interp" beforeDir="false" afterPath="$PROJECT_DIR$/src/gen/SQLiteLexer.interp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/gen/SQLiteLexer.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gen/SQLiteLexer.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/gen/SQLiteParser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/gen/SQLiteParser.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/wm_input.7z" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -65,7 +64,7 @@
     &quot;git-widget-placeholder&quot;: &quot;master&quot;,
     &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Users/omer_/IdeaProjects/SQLiteRecognizer/src&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/omer_/IdeaProjects/SQLiteRecognizer&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
     &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
@@ -80,6 +79,7 @@
 }</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="C:\Users\omer_\IdeaProjects\SQLiteRecognizer" />
       <recent name="C:\Users\omer_\IdeaProjects\SQLiteRecognizer\src" />
       <recent name="C:\Users\omer_\IdeaProjects\SQLiteRecognizer\gen" />
       <recent name="C:\Users\omer_\IdeaProjects\SQLiteRecognizer\grammar" />
@@ -174,7 +174,8 @@
       <workItem from="1713519931873" duration="626000" />
       <workItem from="1713699810971" duration="489000" />
       <workItem from="1713700326282" duration="12024000" />
-      <workItem from="1713873559243" duration="9411000" />
+      <workItem from="1713873559243" duration="9836000" />
+      <workItem from="1716884401112" duration="214000" />
     </task>
     <task id="LOCAL-00001" summary="added grammar files">
       <option name="closed" value="true" />
@@ -208,7 +209,15 @@
       <option name="project" value="LOCAL" />
       <updated>1710933881379</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="moving over to desktop">
+      <option name="closed" value="true" />
+      <created>1713893122771</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1713893122771</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -219,14 +228,15 @@
     <MESSAGE value="added dependencies, generated parser" />
     <MESSAGE value="went through the generated pos samples, 907237/999999 samples passed." />
     <MESSAGE value="update samplefinder with correct path" />
-    <option name="LAST_COMMIT_MESSAGE" value="update samplefinder with correct path" />
+    <MESSAGE value="moving over to desktop" />
+    <option name="LAST_COMMIT_MESSAGE" value="moving over to desktop" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
       <breakpoints>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/src/Recognizer.java</url>
-          <line>71</line>
+          <line>69</line>
           <option name="timeStamp" value="3" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>### IntelliJ IDEA ###\r\nout/\r\n!**/src/main/**/out/\r\n!**/src/test/**/out/\r\n\r\n### Eclipse ###\r\n.apt_generated\r\n.classpath\r\n.factorypath\r\n.project\r\n.settings\r\n.springBeans\r\n.sts4-cache\r\nbin/\r\n!**/src/main/**/bin/\r\n!**/src/test/**/bin/\r\n\r\n### NetBeans ###\r\n/nbproject/private/\r\n/nbbuild/\r\n/dist/\r\n/nbdist/\r\n/.nb-gradle/\r\n\r\n### VS Code ###\r\n.vscode/\r\n\r\n### Mac OS ###\r\n.DS_Store
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 0794d2e81e935e7278a82817d46d606d84ccfcc7)
+++ b/.gitignore	(date 1716884499599)
@@ -26,4 +26,12 @@
 .vscode/
 
 ### Mac OS ###
-.DS_Store
\ No newline at end of file
+.DS_Store
+/details.csv
+/log.txt
+/log_failing_sql.txt
+/log_old.txt
+/poisoned_pairs.json
+/precede_and_follow_all_datasets.json
+/gen/
+/grammar/gen/
